<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  height: 500px;
  position: relative;
  width: 960px;
}

#projection-menu {
  position: absolute;
  right: 10px;
  top: 10px;
}

.background {
  fill: #a4bac7;
}

.foreground {
  fill: none;
  stroke: #333;
  stroke-width: 1.5px;
}

.graticule {
  fill: none;
  stroke: #fff;
  stroke-width: .5px;
}

.graticule :nth-child(2n) {
  stroke-dasharray: 2,2;
}

.land {
  fill: #d7c7ad;
  stroke: #766951;
}

.boundary {
  fill: none;
  stroke: #a5967e;
}

</style>
<select id="projection-menu"></select>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://d3js.org/d3.geo.projection.v0.min.js"></script>
<script src="http://d3js.org/topojson.v0.min.js"></script>
<script>

var width = 960,
    height = 500;

var options = [
  {name: "Aitoff", projection: d3.geo.aitoff()},
//{name: "Albers", projection: d3.geo.albers().origin([0, 0]).parallels([20, 50]).scale(150)},
  {name: "August", projection: d3.geo.august()},
  {name: "Bonne", projection: d3.geo.bonne()},
  {name: "Collignon", projection: d3.geo.collignon()},
  {name: "Eckert I", projection: d3.geo.eckert1()},
  {name: "Eckert II", projection: d3.geo.eckert2()},
  {name: "Eckert III", projection: d3.geo.eckert3()},
  {name: "Eckert IV", projection: d3.geo.eckert4()},
  {name: "Eckert V", projection: d3.geo.eckert5()},
  {name: "Eckert VI", projection: d3.geo.eckert6()},
  {name: "Eisenlohr", projection: d3.geo.eisenlohr()},
  {name: "Equirectangular (Plate Carrée)", projection: d3.geo.equirectangular()},
  {name: "Hammer", projection: d3.geo.hammer()},
  {name: "Goode Homolosine", projection: d3.geo.homolosine()},
  {name: "Kavrayskiy VII", projection: d3.geo.kavrayskiy7()},
  {name: "Lambert cylindrical equal-area", projection: d3.geo.cylindricalEqualArea()},
  {name: "Lagrange", projection: d3.geo.lagrange()},
  {name: "Larrivée", projection: d3.geo.larrivee()},
  {name: "Mercator", projection: d3.geo.mercator()},
  {name: "Miller", projection: d3.geo.miller()},
  {name: "Mollweide", projection: d3.geo.mollweide()},
  {name: "Nell–Hammer", projection: d3.geo.nellHammer()},
  {name: "Polyconic", projection: d3.geo.polyconic()},
  {name: "Robinson", projection: d3.geo.robinson()},
  {name: "Sinusoidal", projection: d3.geo.sinusoidal()},
  {name: "van der Grinten", projection: d3.geo.vanDerGrinten()},
  {name: "Wagner VI", projection: d3.geo.wagner6()},
  {name: "Winkel Tripel", projection: d3.geo.winkel3()}
];

// Disable adaptive resampling to allow transitions.
options.forEach(function(option) {
  option.projection.precision(0);
});

var interval = setInterval(loop, 1500),
    i = 0,
    n = options.length - 1;

var path = d3.geo.path()
    .projection(options[i].projection);

var graticule = d3.geo.graticule();

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

svg.append("path")
    .datum(graticule.outline)
    .attr("class", "background")
    .attr("d", path);

svg.append("g")
    .attr("class", "graticule")
  .selectAll("path")
    .data(graticule.lines)
  .enter().append("path")
    .attr("d", path);

svg.append("path")
    .datum(graticule.outline)
    .attr("class", "foreground")
    .attr("d", path);

d3.json("/data/world-110m.json", function(error, world) {
  svg.insert("path", ".graticule")
      .datum(topojson.object(world, world.objects.land))
      .attr("class", "land")
      .attr("d", path);

  svg.insert("path", ".graticule")
      .datum(topojson.mesh(world, world.objects.countries, function(a, b) { return a.id !== b.id; }))
      .attr("class", "boundary")
      .attr("d", path);
});

var menu = d3.select("#projection-menu")
    .on("change", change);

menu.selectAll("option")
    .data(options)
  .enter().append("option")
    .text(function(d) { return d.name; });

function loop() {
  var j = Math.floor(Math.random() * n);
  menu.property("selectedIndex", i = j + (j >= i));
  update(options[i]);
}

function change() {
  clearInterval(interval);
  update(options[this.selectedIndex]);
}

function update(option) {
  svg.selectAll("path").transition()
      .duration(750)
      .attr("d", path.projection(option.projection));
}

</script>